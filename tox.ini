# tox (https://tox.readthedocs.io/) is a tool for running tests
# Run tests in multiple virtualenvs.

[tox]
envlist =
    flake8
    pylint
    py{36,37,38,39,310}
    bandit
    readme
    requirements
    safety
    clean

[testenv]
description = Unit tests and doctests
deps =
    cli-test-helpers
    pytest
commands =
    pytest {posargs}

[testenv:clean]
description = Remove Python bytecode and other debris
skip_install = true
deps = pyclean
commands =
    pyclean {posargs} {toxinidir}
    rm -rf .tox/ concierge_cli.egg-info/ build/ dist/
whitelist_externals =
    rm

[testenv:bandit]
description = PyCQA security linter
skip_install = true
deps = bandit
commands = bandit -r {posargs:concierge_cli}

[testenv:flake8]
description = Static code analysis and code style
skip_install = true
deps = flake8
commands = flake8 {posargs}

[testenv:pylint]
description = Check for errors and code smells
deps = pylint
commands = pylint --rcfile=tox.ini {posargs:concierge_cli setup}

[testenv:readme]
description = Ensure README renders on PyPI
skip_install = true
deps =
    build
    twine
commands =
    {envpython} -m build
    twine check dist/*

[testenv:requirements]
description = Update package requirements
skip_install = true
deps =
    pip-tools
    pipenv
commands =
    pip-compile --upgrade
    pipenv update

[testenv:safety]
description = Check for vulnerable dependencies
skip_install = true
deps = safety
commands = safety check -r requirements.txt --bare

[bandit]
exclude = .tox,build,dist,tests

[flake8]
exclude = .tox,build,dist,concierge_cli.egg-info

[pylint]
[MASTER]
output-format = colorized
disable = too-few-public-methods,too-many-arguments,consider-using-f-string

[pytest]
addopts =
    --color=yes
    --doctest-modules
    --verbose
